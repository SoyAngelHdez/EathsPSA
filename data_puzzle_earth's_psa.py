# -*- coding: utf-8 -*-
"""Data-Puzzle / Earth's PSA

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fSVeC1TxJDP6TykAillqPtkTl49aNPvd

# Intro

Here's is the message from Earth:
'I remember that if you sort the countries (or dependencies) [Guinea, Iran, Trinidad And Tobago, Honduras, Lebanon, Ethiopia, Niger, Afghanistan, India, American Samoa, Cuba, Gabon, Nicaragua, Channel Islands, Martinique] by density of population (DESCENDING) and then only look at the first letter of each country, you'll get my message back!! Can you help me please?'

To help our planet, we preloaded world population and geographical data from the website Worldometer (https://worldometers.info/). Use it to do what the earth says and decode the message!
"""

import pandas as pd

countries = ['Guinea', 'Iran', 'Trinidad and Tobago', 'Honduras', 'Lebanon',
             'Ethiopia', 'Niger', 'Afghanistan', 'India', 'American Samoa',
             'Cuba', 'Gabon', 'Nicaragua', 'Channel Islands', 'Martinique']

country_pop = pd.read_csv('https://raw.githubusercontent.com/hyperc54/data-puzzles-assets/master/misc/earth/population_by_country.csv')

country_pop.head()

country_surface = pd.read_csv('https://raw.githubusercontent.com/hyperc54/data-puzzles-assets/master/misc/earth/surface_by_country.csv')

country_surface.head()

country_pop.head()

#First of all I'm going to turn the countries array into a data frame to work with it
needed_countries = pd.DataFrame({
    "Country (or dependency)":countries,
})

#Now I'm going to make some inner joins to get rid of all thw countries we don't need
#Getting rid of this countries first could make lighter the use of memory
needed_countries = pd.merge(needed_countries,country_pop,on="Country (or dependency)")
needed_countries = pd.merge(needed_countries,country_surface,on="Country (or dependency)")

#Then I calculated the density of population and sort the countries
needed_countries['Urban density'] = needed_countries['Population (2020)']/needed_countries['Land Area (KmÂ²)']
needed_countries=needed_countries.sort_values(by='Urban density',ascending=False)

#Finally I got the initials to read the message more easily
initials = needed_countries["Country (or dependency)"].apply(lambda x:x[0])
''.join(list(initials))